<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">

	<flow name="ImplementationFlow" doc:id="110be77e-5cac-4b69-9218-6d7993a43ec6" >
		<logger level="INFO" doc:name="Logger" doc:id="7c3fb471-cec1-4f88-a13a-b74164e75d12" message="Payload to DB"/>
		<db:select doc:name="Select" doc:id="a8c4a549-00e6-405f-a47f-6b7a54497b89" config-ref="Database_Config">
			<db:sql ><![CDATA[select * from customer where emailid = :email_id

]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
"email_id" : attributes.queryParams.emailId
}]]]></db:input-parameters>
		</db:select>
		<logger level="INFO" doc:name="Logger" doc:id="f7158b11-5aad-4438-a271-5ac615678e0a" message="Payload from DB"/>
		<choice doc:name="Choice" doc:id="9c8af25a-234a-4d4b-8ee6-f3cf8ee7285d" >
			<when expression="#[sizeOf(payload) == 0]">
				<set-payload value="#[payload]" doc:name="Set Payload" doc:id="364b3e29-1f26-46a3-b303-8503cf20c61d" />
				<raise-error doc:name="Raise error" doc:id="bba269fc-960e-4622-a541-39f8998942b1" type="ACCOUNT:NOT_FOUND" description="Customer not found with provided email address"/>
			</when>
			<otherwise >
				<ee:transform doc:name="Transform Message" doc:id="21b5656b-55f4-4f14-85b6-cb08de43e0be">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
 "firstName":payload.firstName,
 "emailID":payload.emailID,
 "lastName":payload.lastName,
 "customerId": payload.custID,
 "phoneNumber":payload.phoneNo
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			</otherwise>
		</choice>
		<logger level="INFO" doc:name="Logger" doc:id="53e9f200-a886-4927-a94c-511452031e76" message="#[payload]" />
	</flow>
	<flow name="createCustomer(Post)" doc:id="e873e2ca-d204-4cba-bf89-eb182583ff5b" >
		<logger level="INFO" doc:name="Logger" doc:id="043db97b-4fa5-40c6-b8e5-f1e5599c4257" message="Start of Create customer Flow"/>
		<set-variable value="#[payload]" doc:name="Set Variable" doc:id="de4ea007-3e3e-41f3-9fb8-afeaae4ef4fe" variableName="customerPayload"/>
		<logger level="INFO" doc:name="Logger" doc:id="74b00504-f42f-458d-b88a-e0c5bc95fd1a" message="Check whether customer already exists in the system"/>
		<db:select doc:name="Select" doc:id="9f9f02ff-f571-4df7-ac13-46e1995521f2" config-ref="Database_Config">
			<db:sql ><![CDATA[select * from customer where custID  = :custid]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	custid : payload.customerId
	
	}]]]></db:input-parameters>
		</db:select>
		<choice doc:name="Check customer exists" doc:id="56164042-be13-4f24-9486-2fe95a16f5fc" >
			<when expression="sizeOf(payload) &gt; 0">
				<raise-error doc:name="Raise error" doc:id="8be2eca0-f5c3-459d-9b52-4e6264f4aba3" type="ACCOUNT:CUSTOMER_ALREADY_EXISTS" description="Customer exists in the system"/>
			</when>
			<otherwise >
				<logger level="INFO" doc:name="Logger" doc:id="6227ecf5-883b-4ba5-86a5-22bfe315d7b4" message="Inserting record into the database"/>
				<db:insert doc:name="Insert" doc:id="76943f0d-9294-479e-8457-0a7e781d6fe7" config-ref="Database_Config">
			<db:sql><![CDATA[insert into customer (firstName, lastName, emailID, custID, phoneNo) values ( :firstname, :lastname, :emailid, :custid, :phoneno)]]></db:sql>
			<db:input-parameters><![CDATA[#[{   
	firstname : vars.customerPayload.firstName,
	lastname : vars.customerPayload.lastName,
	emailid	: vars.customerPayload.emailId,
	custid : vars.customerPayload.customerId,
	phoneno : vars.customerPayload.phoneNumber	
}]]]></db:input-parameters>
		</db:insert>
				<set-payload value='#[{
"message" : "Customer record created successfully"
}]' doc:name="Set Payload" doc:id="1a8c7b65-52ab-47c1-adbc-38728414256d" />
			</otherwise>
		</choice>
		<logger level="INFO" doc:name="Logger" doc:id="401aad87-b681-41b7-8d0b-1ca83dd39ed5" message="Record inserted successfully" />
	</flow>
	<flow name="getCustomerByCustomerID" doc:id="aae463e3-0dc9-45aa-b524-08920a37f2c1" >
		<logger level="INFO" doc:name="Logger" doc:id="c4af2de4-3f51-4c75-b0d5-997e9d99b8a7" message="Start the getCustomerByCustomerID Flow"/>
		<set-variable value="#[attributes.uriParams.customerId]" doc:name="Set Customer Id to variable" doc:id="85a8395f-1600-4b77-af2b-a4ad2786189e" variableName="customerId"/>
		<db:select doc:name="Select" doc:id="7e9821fe-3548-4620-b13d-0d083a783d52" config-ref="Database_Config">
			<db:sql ><![CDATA[select * from customer where custID = :custid]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	custid: vars.customerId
	
}]]]></db:input-parameters>
		</db:select>
		<logger level="INFO" doc:name="Logger" doc:id="b8a7250f-1273-40b8-88cf-1ff95d8611fe" message="Record from Select query : payload"/>
		<choice doc:name="Choice" doc:id="d469cec9-e771-4759-8db8-4baf5a3feab1" >
			<when expression="sizeOf(payload) == 0">
				<raise-error doc:name="Raise error" doc:id="de068cc7-aa6d-4cda-9780-465661ccc52e" type="ACCOUNT:NOT_FOUND" description='#[ output application/json --- " Customer not found for the customer id ( $(vars.customerId) )" ]'/>
			</when>
			<otherwise >
				<logger level="INFO" doc:name="Logger" doc:id="978eb57c-1d09-48d4-8be5-3df6fde0f061" message="Start - Transform the oracle record"/>
				<ee:transform doc:name="Transform Message" doc:id="e09febd7-51cc-4c77-9cc8-93507909fc4f">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
 "firstName":payload[0].firstName,
 "emailID":payload[0].emailID,
 "lastName":payload[0].lastName,
 "customerId": payload[0].custID,
 "phoneNumber":payload[0].phoneNo
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<logger level="INFO" doc:name="Logger" doc:id="dc4aa59b-d878-4a22-b43c-c08928de6a23" message="End - Transform the oracle record"/>
			</otherwise>
		</choice>
	</flow>
</mule>
